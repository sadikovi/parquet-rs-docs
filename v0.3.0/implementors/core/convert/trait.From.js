(function() {var implementors = {};
implementors["parquet"] = [{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"parquet/errors/enum.ParquetError.html\" title=\"enum parquet::errors::ParquetError\">ParquetError</a>",synthetic:false,types:["parquet::errors::ParquetError"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"enum\" href=\"parquet/errors/enum.ParquetError.html\" title=\"enum parquet::errors::ParquetError\">ParquetError</a>",synthetic:false,types:["parquet::errors::ParquetError"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"enum\" href=\"parquet/errors/enum.ParquetError.html\" title=\"enum parquet::errors::ParquetError\">ParquetError</a>",synthetic:false,types:["parquet::errors::ParquetError"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/cell/struct.BorrowMutError.html\" title=\"struct core::cell::BorrowMutError\">BorrowMutError</a>&gt; for <a class=\"enum\" href=\"parquet/errors/enum.ParquetError.html\" title=\"enum parquet::errors::ParquetError\">ParquetError</a>",synthetic:false,types:["parquet::errors::ParquetError"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"parquet/errors/enum.ParquetError.html\" title=\"enum parquet::errors::ParquetError\">ParquetError</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>",synthetic:false,types:["std::io::error::Error"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Type&gt; for <a class=\"enum\" href=\"parquet/basic/enum.Type.html\" title=\"enum parquet::basic::Type\">Type</a>",synthetic:false,types:["parquet::basic::Type"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;ConvertedType&gt;&gt; for <a class=\"enum\" href=\"parquet/basic/enum.LogicalType.html\" title=\"enum parquet::basic::LogicalType\">LogicalType</a>",synthetic:false,types:["parquet::basic::LogicalType"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;FieldRepetitionType&gt; for <a class=\"enum\" href=\"parquet/basic/enum.Repetition.html\" title=\"enum parquet::basic::Repetition\">Repetition</a>",synthetic:false,types:["parquet::basic::Repetition"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Encoding&gt; for <a class=\"enum\" href=\"parquet/basic/enum.Encoding.html\" title=\"enum parquet::basic::Encoding\">Encoding</a>",synthetic:false,types:["parquet::basic::Encoding"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;CompressionCodec&gt; for <a class=\"enum\" href=\"parquet/basic/enum.Compression.html\" title=\"enum parquet::basic::Compression\">Compression</a>",synthetic:false,types:["parquet::basic::Compression"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PageType&gt; for <a class=\"enum\" href=\"parquet/basic/enum.PageType.html\" title=\"enum parquet::basic::PageType\">PageType</a>",synthetic:false,types:["parquet::basic::PageType"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"struct\" href=\"parquet/data_type/struct.Int96.html\" title=\"struct parquet::data_type::Int96\">Int96</a>",synthetic:false,types:["parquet::data_type::Int96"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"struct\" href=\"parquet/data_type/struct.ByteArray.html\" title=\"struct parquet::data_type::ByteArray\">ByteArray</a>",synthetic:false,types:["parquet::data_type::ByteArray"]},{text:"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"parquet/data_type/struct.ByteArray.html\" title=\"struct parquet::data_type::ByteArray\">ByteArray</a>",synthetic:false,types:["parquet::data_type::ByteArray"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"type\" href=\"parquet/memory/type.ByteBufferPtr.html\" title=\"type parquet::memory::ByteBufferPtr\">ByteBufferPtr</a>&gt; for <a class=\"struct\" href=\"parquet/data_type/struct.ByteArray.html\" title=\"struct parquet::data_type::ByteArray\">ByteArray</a>",synthetic:false,types:["parquet::data_type::ByteArray"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"type\" href=\"parquet/memory/type.ByteBuffer.html\" title=\"type parquet::memory::ByteBuffer\">ByteBuffer</a>&gt; for <a class=\"struct\" href=\"parquet/data_type/struct.ByteArray.html\" title=\"struct parquet::data_type::ByteArray\">ByteArray</a>",synthetic:false,types:["parquet::data_type::ByteArray"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;&gt; for <a class=\"struct\" href=\"parquet/schema/types/struct.ColumnPath.html\" title=\"struct parquet::schema::types::ColumnPath\">ColumnPath</a>",synthetic:false,types:["parquet::schema::types::ColumnPath"]},{text:"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"parquet/schema/types/struct.ColumnPath.html\" title=\"struct parquet::schema::types::ColumnPath\">ColumnPath</a>",synthetic:false,types:["parquet::schema::types::ColumnPath"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"struct\" href=\"parquet/schema/types/struct.ColumnPath.html\" title=\"struct parquet::schema::types::ColumnPath\">ColumnPath</a>",synthetic:false,types:["parquet::schema::types::ColumnPath"]},];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
